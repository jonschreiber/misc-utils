#!/bin/bash


ADMIN_PASSWORD=$(LC_ALL=C tr -cd '[:alnum:]' < /dev/urandom | fold -w9 | head -n1)$(LC_ALL=C tr -cd '[:upper:]' < /dev/urandom | fold -w1 | head -n1)$(LC_ALL=C tr -cd '[:lower:]' < /dev/urandom | fold -w1 | head -n1)$(LC_ALL=C tr -cd '[:digit:]' < /dev/urandom | fold -w1 | head -n1)
DATABASE_NAME=demo$(LC_ALL=C tr -cd '[:alnum:]' < /dev/urandom | fold -w8 | head -n1 | tr '[:upper:]' '[:lower:]')
DATABASE_OCID=""

export TNS_ADMIN=$(mktemp -d -t wallet-XXXXXXXXXX)

command -v oci > /dev/null 2>&1 || { echo >&2 "The OCI cli is not configured or is not on your path" ; exit 1 ; }
command -v sqlplus > /dev/null 2>&1 || { echo >&2 "sqlplus command not found" ; exit 1 ; }


function cleanup()
{
    return 0
}

@confirm() {
  local message="$*"
  local result=3

  echo -n "> $message (y/n) " >&2

  while [[ $result -gt 1 ]] ; do
    read -s -n 1 choice
    case "$choice" in
      y|Y ) 
        printf "$choice \n"
        result=0 ;;
      n|N ) 
        printf "$choice \n"
        result=1 ;;
    esac
  done

  return $result
}

function validate_compartment()
{
    local _compartment_id="$1"
    if @confirm "oci iam compartment get --compartment-id ${_compartment_id}"; then
        oci iam compartment get --compartment-id "${_compartment_id}" > /dev/null 2>&1
        return $?  
    else
        printf "\n\n"
        return 0
    fi
}

function create_autonomous_database()
{
    local _compartment_id="$1"
    local _atp_response=""
    if @confirm "oci db autonomous-database create --compartment-id ${_compartment_id} --db-name ${DATABASE_NAME} --cpu-core-count 2 --data-storage-size-in-tbs 1 --admin-password ${ADMIN_PASSWORD}" ; then

        _atp_response=$(oci db autonomous-database create \
        --wait-for-state AVAILABLE \
        --compartment-id "${_compartment_id}" \
        --db-name "${DATABASE_NAME}" \
        --cpu-core-count 2 \
        --data-storage-size-in-tbs 1 \
        --admin-password "${ADMIN_PASSWORD}")
    else
        read -p "Enter database id: " existing_database_id
        read -p "Enter admin password: " db_admin_password
        ADMIN_PASSWORD=$db_admin_password
        read -p "Enter database name: " db_name
        DATABASE_NAME=$db_name
        DATABASE_OCID=$existing_database_id
        return 0
    fi
    
    local _status=$?
    if [ $_status == 0 ] ; then
        DATABASE_OCID= $("${_atp_response}" | jq -r '.data.id')
    fi
    return $status
}

function generate_atp_wallet()
{
    local _autonomous_db_id="$1"
    local _local_wallet="${TNS_ADMIN}/wallet.zip"

    if @confirm "oci db autonomous-database generate-wallet --autonomous-database-id ${_autonomous_db_id} --password ${ADMIN_PASSWORD} --file ${_local_wallet}"; then

        oci db autonomous-database generate-wallet \
            --autonomous-database-id "${_autonomous_db_id}" \
            --password "${ADMIN_PASSWORD}" \
            --file "${_local_wallet}"
    else
        return 0
    fi

    if [ $? -ne 0 ] ; then
        return $?
    fi

    unzip "${_local_wallet}" -d "${TNS_ADMIN}"
    if [ $? -ne 0 ] ; then
        return $?
    fi

    if [ "$(uname -s)" == "Darwin" ] ; then
        sed -i "" "s#\?/network/admin#${TNS_ADMIN}#g" ${TNS_ADMIN}/sqlnet.ora
    else
        sed -i "s#\?/network/admin#${TNS_ADMIN}#g" ${TNS_ADMIN}/sqlnet.ora
    fi

    if [ $? -ne 0 ] ; then
        return $?
    fi

    return 0
}

function call_sqlplus()
{
    if @confirm "Connect to ${DATABASE_NAME} with sqlplus?"; then
        echo "select USERNAME from all_users;" | sqlplus admin/"${ADMIN_PASSWORD}"@"${DATABASE_NAME}_high"
        return $?
    else
        return 0
    fi
    
}

function delete_autonomous_database()
{
    local _autonomous_db_id="$1"
    if @confirm "oci db autonomous-database delete --force --wait-for-state TERMINATED --autonomous-database-id ${_autonomous_db_id}"; then
        oci db autonomous-database delete \
            --force \
            --wait-for-state TERMINATED \
            --autonomous-database-id "${_autonomous_db_id}"
        return $?
    else
        return 0
    fi
    
}


if [ $# -ne 1 ] ; then
    echo "usage: $0 compartment_ocid"
    exit 1
fi



if @confirm 'Create ATP demo\?' ; then

    printf "\n"
    validate_compartment "${1}" || { $status=$? ; cleanup ; exit $status ; }
    printf "\n"
    create_autonomous_database "${1}" || { $status=$? ; cleanup ; exit $status ; }
    printf "\n"
    generate_atp_wallet "${DATABASE_OCID}" || { $status=$? ; cleanup ; exit $status ; }
    printf "\n"
    call_sqlplus || { $status=$? ; cleanup ; exit $status ; }
    printf "\n"
    delete_autonomous_database "${DATABASE_OCID}"

else
    printf "\n\n"
    return 0
fi

exit 0
